{"version":3,"file":"openapi-client-js.esm.js","sources":["../src/env.ts","../src/adapt/fetchAdapt.ts","../src/errors.ts","../src/api.ts","../src/index.ts"],"sourcesContent":["export default {\n  get DEBUG() {\n    return (window as any).DEBUG ?? false;\n  },\n};\n","import env from \"../env\";\n\nexport function fetchAdapt(fetchFn: typeof fetch) {\n  return async (requestOptions: any) => {\n    if (env.DEBUG) console.log(\"[FetchAdapt] request:\", requestOptions);\n    const { method, url, body, headers } = requestOptions;\n    const accept = headers.accept;\n\n    const response = await fetchFn(url, {\n      method,\n      body: body ? JSON.stringify(body) : undefined,\n      headers,\n    });\n\n    const resHeaders = {};\n\n    response.headers.forEach((value, key) => {\n      resHeaders[key] = value;\n    });\n\n    const res = {\n      status: response.status,\n      statusText: response.statusText,\n      headers: resHeaders,\n      data:\n        accept === \"application/json\"\n          ? await response.json()\n          : await response.text(),\n    };\n    if (env.DEBUG) console.log(\"[FetchAdapt] response:\", res);\n\n    return res;\n  };\n}\n","export class ClientError extends Error {\n  constructor(message, public payload: any) {\n    super(message);\n  }\n}\n\nexport class HttpException extends Error {\n  constructor(message, public payload: any) {\n    super(message);\n  }\n}\n","/**\n * API 接口文件，最终会被 `nid openapi` 命令生成的代码覆盖\n */\nexport class Api {\n  constructor(public request: any) {}\n}\n","export * from \"./adapt/fetchAdapt\";\nexport * from \"./errors\";\nexport * from \"./api\";\n\nimport { ClientError, HttpException } from \"./errors\";\n\nexport function reqHandler(\n  dto: any,\n  method: string,\n  pathKey: string,\n  { paths }: any\n) {\n  let url = \"\";\n  let body = undefined;\n\n  // Find the path in the openapi paths object\n  const path = paths[pathKey];\n\n  // Check if the path exists\n  if (!path) {\n    throw new ClientError(`Path not found: ${pathKey}`, paths);\n  }\n  // Find the method in the path object\n  const pathMethod = path[method];\n\n  // Check if the method exists\n  if (!pathMethod) {\n    throw new ClientError(`Method not found: ${method}`, path);\n  }\n  // Get the URL from the path\n  url = transformUrlByDto(dto, pathKey, pathMethod?.parameters);\n\n  const contentType = extractContentType(pathMethod);\n\n  // Get the request body schema from the path\n  const requestBodySchema =\n    pathMethod.requestBody?.content?.[contentType]?.schema;\n\n  // Check if the request body schema exists\n  if (requestBodySchema) {\n    // Validate and transform the DTO based on the request body schema\n    body = transformBodyByDto(dto, requestBodySchema);\n  }\n\n  return {\n    method: method.toUpperCase(),\n    url: url,\n    body: body,\n    headers: {\n      accept: extractAccept(pathMethod),\n      \"content-type\": contentType,\n    },\n  };\n}\n\nexport function resHandler<R = unknown>(response: any): R {\n  if (response.status >= 400) {\n    throw new HttpException(response.statusText, response);\n  }\n  return response.data as R;\n}\n\nfunction extractAccept(pathMethod: any) {\n  for (const responseCode in pathMethod.responses) {\n    const response = pathMethod.responses[responseCode];\n    for (const contentType in response.content) {\n      return contentType;\n    }\n  }\n  return undefined;\n}\n\nfunction extractContentType(pathMethod: any) {\n  for (const contentType in pathMethod?.requestBody?.content) {\n    return contentType;\n  }\n  return undefined;\n}\n\nfunction transformBodyByDto(dto: any, schema: any) {\n  const body: any = {};\n\n  // Iterate over the properties of the schema\n  for (const key in schema.properties) {\n    const property = schema.properties[key];\n\n    // Check if the property is required and exists in the DTO\n    if (property.required && !dto[key]) {\n      throw new Error(`Missing required property: ${key}`);\n    }\n\n    // Check if the property exists in the DTO\n    if (dto[key] !== undefined) {\n      body[key] = dto[key];\n    }\n  }\n\n  return body;\n}\n\nfunction transformUrlByDto(dto: any, url: string, parameters: any[] = []) {\n  const parametersMap = {};\n\n  parameters.forEach((param) => {\n    if (!parametersMap[param.in]) {\n      parametersMap[param.in] = [];\n    }\n    parametersMap[param.in].push(param);\n  });\n\n  parametersMap[\"path\"]?.forEach((param) => {\n    const paramName = param.name;\n    const paramValue = dto[paramName];\n\n    // Replace the parameter in the URL\n    url = url.replace(`{${paramName}}`, encodeURIComponent(paramValue));\n  });\n\n  parametersMap[\"query\"]?.forEach((param) => {\n    const paramName = param.name;\n    const paramValue = dto[paramName];\n\n    // Append the parameter to the URL\n    url += `${url.includes(\"?\") ? \"&\" : \"?\"}${paramName}=${encodeURIComponent(\n      paramValue\n    )}`;\n  });\n\n  return url;\n}\n"],"names":[],"mappings":"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"}